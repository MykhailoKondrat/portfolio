@tailwind base;
@tailwind components;
@tailwind utilities;

@layer components {
	.custom-avatar {
		@apply relative rounded-full w-[30vw] h-[30vw] flex items-center justify-center z-[5] bg-no-repeat bg-center bg-contain;
		background-image: url('/avatar-no-bg.png'),
			linear-gradient(to bottom right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.2));
		max-width: 100%;
	}
	/* .custom-avatar-border {
		@apply relative z-9 w-[calc(30vw+2px)] h-[calc(30vw+2px)] rounded-full bg-gradient-to-br from-purple-500 to-green-500 flex justify-center items-center;
	} */
	.avatar-circle {
		@apply border border-opacity-40 w-[60vw] h-[60vw] absolute bg-transparent rounded-full;
		border-color: rgba(var(--foreground), 0.4);
		overflow: hidden;
	
		
	}

	@keyframes rotate {
		0% {
			transform: rotate(0deg);
		}
		100% {
			transform: rotate(360deg);
		}
	}

	.noise::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='200' viewBox='0 0 200 200'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='turbulence' baseFrequency='0.25' numOctaves='2' stitchTiles='stitch'/%3E%3CfeColorMatrix type='saturate' values='0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='0.15'/%3E%3C/svg%3E");
		pointer-events: none;
		z-index: -1;
		animation: rotate 400s linear infinite;
	}
}
